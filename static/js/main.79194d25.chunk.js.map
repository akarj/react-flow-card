{"version":3,"sources":["Components/Data/InitialState.js","Components/ReactFlowWorkField/ReactFlowWorkField.jsx","Components/Modules/TextField/TextField.jsx","Components/Modules/ImageField/ImageField.jsx","Components/Modules/CardGenerator/CardGenerator.jsx","Components/Modules/Outfield/Outfield.jsx","Components/Modules/Module/Module.jsx","Components/BottomBar/BottomBar.jsx","App.js","index.js"],"names":["initialState","id","type","data","label","position","x","y","source","target","animated","nodeTypes","TextNode","ImageNode","CardNode","OutNode","text_id","image_id","card_id","getId","ReactFlowWorkField","useState","elements","setElements","reactFlowInstance","setReactFlowInstance","reactFlowWrapper","useRef","className","ref","onConnect","params","els","addEdge","snapToGrid","snapGrid","defaultZoom","onDragOver","event","preventDefault","dataTransfer","dropEffect","onDrop","reactFlowBounds","current","getBoundingClientRect","getData","project","clientX","left","clientY","top","newNode","es","concat","onLoad","_reactFlowInstance","style","backgroundColor","onElementsRemove","elementsToRemove","removeElements","Module","props","BottomBar","onDragStart","nodeType","setData","effectAllowed","e","draggable","App","onClick","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79194d25.chunk.js","sourcesContent":["export const initialState = [\r\n  {\r\n    id: \"text-01\",\r\n    type: \"input\",\r\n    data: {\r\n      label: \"Text Input\",\r\n    },\r\n    position: {\r\n      x: 100,\r\n      y: 100,\r\n    },\r\n  },\r\n  {\r\n    id: \"image-01\",\r\n    type: \"input\",\r\n    data: {\r\n      label: \"image Input\",\r\n    },\r\n    position: {\r\n      x: 100,\r\n      y: 150,\r\n    },\r\n  },\r\n  {\r\n    id: \"card-01\",\r\n    type: \"input\",\r\n    data: {\r\n      label: \"card Input\",\r\n    },\r\n    position: {\r\n      x: 100,\r\n      y: 50,\r\n    },\r\n  },\r\n  {\r\n    id: \"output-01\",\r\n    type: \"output\",\r\n    data: {\r\n      label: \"Card Generate\",\r\n    },\r\n    position: {\r\n      x: 500,\r\n      y: 150,\r\n    },\r\n  },\r\n  {\r\n    id: \"text-01-output-01\",\r\n    type: \"straight\",\r\n    source: \"text-01\",\r\n    target: \"output-01\",\r\n    animated: true,\r\n  },\r\n  {\r\n    id: \"image-01-output-01\",\r\n    type: \"straight\",\r\n    source: \"image-01\",\r\n    target: \"output-01\",\r\n    animated: true,\r\n  },\r\n  {\r\n    id: \"card-01-output-01\",\r\n    type: \"straight\",\r\n    source: \"card-01\",\r\n    target: \"output-01\",\r\n    animated: true,\r\n  },\r\n];\r\n","import \"./ReactFlowWorkField.scss\";\r\nimport { useState, useRef } from \"react\";\r\nimport { initialState } from \"../../Components/Data/InitialState\";\r\nimport ReactFlow, {\r\n  removeElements,\r\n  addEdge,\r\n  ReactFlowProvider,\r\n  Controls,\r\n} from \"react-flow-renderer\";\r\nimport TextNode from \"../Modules/TextField/TextField\";\r\nimport ImageNode from \"../Modules/ImageField/ImageField\";\r\nimport CardNode from \"../Modules/CardGenerator/CardGenerator\";\r\nimport OutNode from \"../Modules/Outfield/Outfield\";\r\n\r\nconst nodeTypes = {\r\n  TextNode,\r\n  ImageNode,\r\n  CardNode,\r\n  OutNode,\r\n};\r\n\r\n/*\r\n[TODO]\r\n\r\n\r\n@params :[modules]\r\n   => 1. Image Module\r\n    2. Text Module\r\n    3. Card Module\r\n    4. OutputModule\r\n\r\n\r\n*/\r\n\r\nlet text_id = 2;\r\nlet image_id = 2;\r\nlet card_id = 2;\r\nconst getId = type =>\r\n  type === \"TEXT\"\r\n    ? `text-${text_id++}`\r\n    : type === \"IMAGE\"\r\n    ? `image-${image_id++}`\r\n    : `card-${card_id++}`;\r\n\r\nexport default function ReactFlowWorkField() {\r\n  // [States]\r\n  const [elements, setElements] = useState(initialState);\r\n  const [reactFlowInstance, setReactFlowInstance] = useState(null);\r\n  const reactFlowWrapper = useRef(null);\r\n\r\n  // [Functions]\r\n  const onDragOver = event => {\r\n    event.preventDefault();\r\n    event.dataTransfer.dropEffect = \"move\";\r\n  };\r\n\r\n  const onConnect = params => setElements(els => addEdge(params, els));\r\n\r\n  const onElementsRemove = elementsToRemove =>\r\n    setElements(els => removeElements(elementsToRemove, els));\r\n\r\n  const onDrop = event => {\r\n    event.preventDefault();\r\n    const reactFlowBounds = reactFlowWrapper.current.getBoundingClientRect();\r\n    const type = event.dataTransfer.getData(\"application/reactflow\");\r\n    const position = reactFlowInstance.project({\r\n      x: event.clientX - reactFlowBounds.left,\r\n      y: event.clientY - reactFlowBounds.top,\r\n    });\r\n    const newNode = {\r\n      id: getId(),\r\n      type,\r\n      position,\r\n      data: { label: `${type} node` },\r\n    };\r\n\r\n    setElements(es => es.concat(newNode));\r\n  };\r\n\r\n  const onLoad = _reactFlowInstance => setReactFlowInstance(_reactFlowInstance);\r\n\r\n  return (\r\n    <div className=\"reactFlowWorkField-container\" ref={reactFlowWrapper}>\r\n      <ReactFlow\r\n        onConnect={onConnect}\r\n        elements={elements}\r\n        nodeTypes={nodeTypes}\r\n        snapToGrid={true}\r\n        snapGrid={[20, 20]}\r\n        defaultZoom={1.5}\r\n        onDragOver={onDragOver}\r\n        onDrop={onDrop}\r\n        onLoad={onLoad}\r\n        style={{ backgroundColor: \"lightcoral\" }}\r\n        onElementsRemove={onElementsRemove}\r\n      >\r\n        <Controls />\r\n      </ReactFlow>\r\n    </div>\r\n  );\r\n}\r\n","import \"./TextField.scss\";\r\n\r\nexport default function TextField() {\r\n  return <div>text FiledðŸ’£ </div>;\r\n}\r\n","import \"./ImageField.scss\";\r\n\r\nexport default function ImageField() {\r\n  return <div>image ðŸš·</div>;\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function CardGenerator() {\r\n  return <div>Card Generator</div>;\r\n}\r\n","import \"./Outfield.scss\";\r\n\r\nexport default function Outfield() {\r\n  return <div>somethis</div>;\r\n}\r\n","import \"./Module.scss\";\r\n\r\nexport default function Module(props) {\r\n  return (\r\n    <div className=\"module-container\">\r\n      <span>{props.type}</span>\r\n    </div>\r\n  );\r\n}\r\n","import \"./BottomBar.scss\";\r\nimport Module from \"../Modules/Module/Module\";\r\n\r\nexport default function BottomBar() {\r\n  const onDragStart = (event, nodeType) => {\r\n    event.dataTransfer.setData(\"application/reactflow\", nodeType);\r\n    event.dataTransfer.effectAllowed = \"move\";\r\n  };\r\n\r\n  return (\r\n    <div className=\"bottomBar-container\">\r\n      <div\r\n        className=\"image-module\"\r\n        onDragStart={e => onDragStart(e, \"ImageNode\")}\r\n        draggable\r\n      >\r\n        <Module key=\"Image Module\" type=\"Image Module\" />\r\n      </div>\r\n      <div\r\n        className=\"text-module\"\r\n        onDragStart={e => onDragStart(e, \"TextNode\")}\r\n        draggable\r\n      >\r\n        <Module key=\"Text Module\" type=\"Text Module\" />\r\n      </div>\r\n      <div\r\n        className=\"card-module\"\r\n        onDragStart={e => onDragStart(e, \"CardNode\")}\r\n        draggable\r\n      >\r\n        <Module key=\"Card Generator\" type=\"Card Generator\" />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import \"./App.scss\";\nimport ReactFlowWorkField from \"./Components/ReactFlowWorkField/ReactFlowWorkField\";\nimport BottomBar from \"./Components/BottomBar/BottomBar\";\n\nfunction App() {\n  const generateCard = e => {\n    console.log(e);\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"generate-button-div\" onClick={generateCard}>\n        <span>Generate</span>\n      </div>\n      <div className=\"main-container\">\n        <ReactFlowWorkField />\n      </div>\n      <div className=\"bottom-bar\">\n        <BottomBar />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}